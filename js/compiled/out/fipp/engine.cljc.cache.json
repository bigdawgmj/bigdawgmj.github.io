["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fipp.engine","~:imports",null,"~:requires",["^ ","~$deque","~$fipp.deque","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$serialize-node",["^ ","^5","~$fipp.engine/serialize-node","~:file","resources/public/js/compiled/out/fipp/engine.cljc","~:line",10,"~:column",1,"~:end-line",10,"~:end-column",25,"~:meta",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",10,"^B",11,"^C",10,"^D",25],"~:tag","~$cljs.core/MultiFn"],"~$serialize",["^ ","~:protocol-inline",null,"^E",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",12,"^B",7,"^C",12,"^D",16,"~:arglists",["~#list",["~$quote",["^K",[["~$doc"]]]]]],"^5","~$fipp.engine/serialize","^@","resources/public/js/compiled/out/fipp/engine.cljc","^D",16,"~:method-params",["^K",[["^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^B",1,"~:variadic?",false,"^A",12,"~:ret-tag",["^4",["~$cljs.core/IVector","~$any","~$clj-nil"]],"^C",12,"~:max-fixed-arity",1,"~:fn-var",true,"^J",["^K",["^L",["^K",[["^M"]]]]]],"~$annotate-rights",["^ ","^I",null,"^E",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",68,"^B",7,"^C",68,"^D",22,"^J",["^K",["^L",["^K",[["~$rf"]]]]],"~:doc","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"^5","~$fipp.engine/annotate-rights","^@","resources/public/js/compiled/out/fipp/engine.cljc","^D",22,"^O",["^K",[["^Z"]]],"^P",null,"^Q",["^K",[null,null]],"^B",1,"^R",false,"^A",68,"^S","~$function","^C",68,"^W",1,"^X",true,"^J",["^K",["^L",["^K",[["^Z"]]]]],"^[","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"~$update-right",["^ ","^I",null,"^E",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",89,"^B",7,"^C",89,"^D",19,"^J",["^K",["^L",["^K",[["^9","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","^R",true,"~:fixed-arity",2,"^W",2,"^O",[["^K",["^9","~$f","^13"]]],"^J",["^K",[["^9","~$f","~$&","^13"]]],"^Q",["^K",[null]]]],"^5","~$fipp.engine/update-right","^@","resources/public/js/compiled/out/fipp/engine.cljc","^D",19,"^14",["^ ","^R",true,"^15",2,"^W",2,"^O",[["^K",["^9","~$f","^13"]]],"^J",["^K",[["^9","~$f","~$&","^13"]]],"^Q",["^K",[null]]],"^O",[["^K",["^9","~$f","^13"]]],"^P",null,"^15",2,"^Q",["^K",[null]],"^B",1,"^R",true,"~:methods",[["^ ","^15",2,"^R",true,"^F","^U"]],"^A",89,"^S","^U","^C",89,"^W",2,"^X",true,"^J",["^K",[["^9","~$f","~$&","^13"]]]],"~$annotate-begins",["^ ","^I",null,"^E",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",92,"^B",7,"^C",92,"^D",22,"^J",["^K",["^L",["^K",[[["^ ","~:keys",["~$width"],"~:as","~$options"]]]]]],"^[","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"^5","~$fipp.engine/annotate-begins","^@","resources/public/js/compiled/out/fipp/engine.cljc","^D",22,"^O",["^K",[["~$p__29107"]]],"^P",null,"^Q",["^K",[null,null]],"^B",1,"^R",false,"^A",92,"^S","^11","^C",92,"^W",1,"^X",true,"^J",["^K",["^L",["^K",[[["^ ","^19",["^1:"],"^1;","^1<"]]]]]],"^[","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"~$format-nodes",["^ ","^I",null,"^E",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",164,"^B",7,"^C",164,"^D",19,"^J",["^K",["^L",["^K",[[["^ ","^19",["^1:"],"^1;","^1<"]]]]]],"^[","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"^5","~$fipp.engine/format-nodes","^@","resources/public/js/compiled/out/fipp/engine.cljc","^D",19,"^O",["^K",[["~$p__29116"]]],"^P",null,"^Q",["^K",[null,null]],"^B",1,"^R",false,"^A",164,"^S","^11","^C",164,"^W",1,"^X",true,"^J",["^K",["^L",["^K",[[["^ ","^19",["^1:"],"^1;","^1<"]]]]]],"^[","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"~$print-fns",["^ ","^I",null,"^E",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",233,"^B",7,"^C",233,"^D",16,"^J",["^K",["^L",["^K",[["^1<"]]]]]],"^5","~$fipp.engine/print-fns","^@","resources/public/js/compiled/out/fipp/engine.cljc","^D",16,"^O",["^K",[["^1<"]]],"^P",null,"^Q",["^K",[null,null]],"^B",1,"^R",false,"^A",233,"^S","~$cljs.core/IMap","^C",233,"^W",1,"^X",true,"^J",["^K",["^L",["^K",[["^1<"]]]]]],"~$pprint-document",["^ ","^I",null,"^E",["^ ","^@","/home/viking/code/myblog/resources/public/js/compiled/out/fipp/engine.cljc","^A",247,"^B",7,"^C",247,"^D",22,"^J",["^K",["^L",["^K",[["~$document"],["^1F","^1<"]]]]],"^14",["^ ","^R",false,"^15",2,"^W",2,"^O",[["^1F"],["^1F","^1<"]],"^J",["^K",[["^1F"],["^1F","^1<"]]],"^Q",["^K",[null,null]]]],"^5","~$fipp.engine/pprint-document","^@","resources/public/js/compiled/out/fipp/engine.cljc","^D",22,"^14",["^ ","^R",false,"^15",2,"^W",2,"^O",[["^1F"],["^1F","^1<"]],"^J",["^K",[["^1F"],["^1F","^1<"]]],"^Q",["^K",[null,null]]],"^O",[["^1F"],["^1F","^1<"]],"^P",null,"^15",2,"^Q",["^K",[null,null]],"^B",1,"^R",false,"^17",[["^ ","^15",1,"^R",false,"^F","^U"],["^ ","^15",2,"^R",false,"^F","^U"]],"^A",247,"^C",247,"^W",2,"^X",true,"^J",["^K",[["^1F"],["^1F","^1<"]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:nest","~:align","~:outdent","~:group","~:else","~:offset","~:default","~:terminate","~:too-far","~:println","~:width","~:op","~:node","~:print","~:begin","~:break","~:nodes","^A","~:print-fn","~:right","~:escaped","~:position","~:pass","~:end","~:hierarchy","~:inline","~:text","~:span"]],"~:order",["^27","^1R","^1W","^29","^1P","^1X","^25","^23","^2:","^A","^28","^1S","^1[","^1O","^1Z","^26","^1L","^1Q","^1N","^1M","^22","^1V","^24","^20","^1T","^21","^1Y","^1U"]],"^[","See: Oleg Kiselyov, Simon Peyton-Jones, and Amr Sabry\n  Lazy v. Yield: Incremental, Linear Pretty-printing"]